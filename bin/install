<?php

/**
 * Install a welcome page for WarvilPHP
 *
 * @return void
 */
function installWelcomePage()
{
    $green = "\033[0;32m";
    $yellow = "\033[1;33m";
    $purple = "\033[0;35m";
    $reset = "\033[0m";

    echo "{$purple}
‚ï¶ ‚ï¶‚îå‚îÄ‚îê‚î¨‚îÄ‚îê‚î¨  ‚î¨‚î¨‚î¨  ‚ïî‚ïê‚ïó‚ï¶ ‚ï¶‚ïî‚ïê‚ïó
‚ïë‚ïë‚ïë‚îú‚îÄ‚î§‚îú‚î¨‚îò‚îî‚îê‚îå‚îò‚îÇ‚îÇ  ‚ï†‚ïê‚ïù‚ï†‚ïê‚ï£‚ï†‚ïê‚ïù
‚ïö‚ï©‚ïù‚î¥ ‚î¥‚î¥‚îî‚îÄ ‚îî‚îò ‚î¥‚î¥‚îÄ‚îò‚ï©  ‚ï© ‚ï©‚ï©   
    {$reset}\n";

    echo "{$green}Installing WarvilPHP Welcome Page{$reset}\n\n";

    // Create welcome controller
    if (!is_dir('app/controllers')) {
        mkdir('app/controllers', 0755, true);
        echo "Created controllers directory\n";
    }

    if (!file_exists('app/controllers/WelcomeController.php')) {
        $controllerContent = <<<'EOT'
<?php

namespace app\controllers;

use app\core\Controller;

class WelcomeController extends Controller
{
    public function index(): void
    {
        $this->view('welcome/index', [], ['layout' => 'welcome']);
    }
}
EOT;
        file_put_contents('app/controllers/WelcomeController.php', $controllerContent);
        echo "{$green}‚úì{$reset} Created WelcomeController.php\n";
    } else {
        echo "{$yellow}!{$reset} WelcomeController.php already exists\n";
    }

    // Create welcome view directory
    if (!is_dir('app/views/welcome')) {
        mkdir('app/views/welcome', 0755, true);
        echo "{$green}‚úì{$reset} Created welcome views directory\n";
    }

    // Create welcome layout
    if (!is_dir('app/shared/layouts')) {
        mkdir('app/shared/layouts', 0755, true);
        echo "{$green}‚úì{$reset} Created layouts directory\n";
    }

    // Create welcome layout file
    if (!file_exists('app/shared/layouts/welcome.php')) {
        $layoutContent = <<<'EOT'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?= htmlspecialchars($warvilConfig['name'] ?? 'WarvilPHP') ?></title>
    
    <!-- Meta -->
    <meta name="description" content="<?= htmlspecialchars($warvilConfig['description'] ?? 'A lightweight PHP framework') ?>">
    <meta name="author" content="<?= htmlspecialchars($warvilConfig['author'] ?? 'WardVisual') ?>">
    
    <!-- Tailwind CSS from CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Custom styles -->
    <link rel="stylesheet" href="<?= htmlspecialchars($baseStyle ?? '') ?>">
    <?php echo isset($cssPath) && $cssPath ? '<link rel="stylesheet" href="' . htmlspecialchars($cssPath) . '">' : ''; ?>
    
    <style>
        /* Pulse animation for the logo */
        @keyframes pulse {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: 0.8;
            }
        }
        .pulse-animation {
            animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
    </style>
</head>
<body class="bg-gray-900 text-white">
    <?= $this->content ?? '' ?>
    
    <!-- Optional JavaScript -->
    <script>
        // Add any JavaScript needed for the welcome page
        document.addEventListener('DOMContentLoaded', function() {
            console.log('WarvilPHP - Welcome!');
        });
    </script>
</body>
</html>
EOT;
        file_put_contents('app/shared/layouts/welcome.php', $layoutContent);
        echo "{$green}‚úì{$reset} Created welcome layout with Tailwind CSS\n";
    } else {
        echo "{$yellow}!{$reset} Welcome layout already exists\n";
    }

    // Create welcome view
    if (!file_exists('app/views/welcome/index.php')) {
        $welcomeView = <<<'EOT'
<div class="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 flex items-center justify-center">
    <div class="w-full max-w-6xl bg-gray-900 bg-opacity-80 rounded-xl shadow-2xl overflow-hidden">
        <div class="p-8 md:p-12">
            <!-- Header -->
            <div class="text-center mb-12">
                <h1 class="text-purple-400 text-6xl md:text-7xl lg:text-8xl font-bold mb-4 pulse-animation">WarvilPHP</h1>
                <p class="text-gray-300 text-2xl md:text-3xl font-light">
                    The elegance of frameworks, the freedom of pure PHP.
                </p>
            </div>
            
            <!-- Feature Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
                <div class="bg-gray-800 bg-opacity-50 p-6 rounded-lg hover:bg-purple-900 hover:bg-opacity-30 transition-all duration-300">
                    <div class="text-purple-400 text-4xl mb-4">üèóÔ∏è</div>
                    <h3 class="text-white text-xl font-semibold mb-2">MVC Architecture</h3>
                    <p class="text-gray-300">Clean separation of Model, View and Controller for organized code structure.</p>
                </div>
                <div class="bg-gray-800 bg-opacity-50 p-6 rounded-lg hover:bg-purple-900 hover:bg-opacity-30 transition-all duration-300">
                    <div class="text-purple-400 text-4xl mb-4">üåê</div>
                    <h3 class="text-white text-xl font-semibold mb-2">Simple Routing</h3>
                    <p class="text-gray-300">Intuitive routing system for both web pages and API endpoints.</p>
                </div>
                <div class="bg-gray-800 bg-opacity-50 p-6 rounded-lg hover:bg-purple-900 hover:bg-opacity-30 transition-all duration-300">
                    <div class="text-purple-400 text-4xl mb-4">üîß</div>
                    <h3 class="text-white text-xl font-semibold mb-2">CLI Tools</h3>
                    <p class="text-gray-300">Built-in command line tools for scaffolding your application.</p>
                </div>
                <div class="bg-gray-800 bg-opacity-50 p-6 rounded-lg hover:bg-purple-900 hover:bg-opacity-30 transition-all duration-300">
                    <div class="text-purple-400 text-4xl mb-4">üß©</div>
                    <h3 class="text-white text-xl font-semibold mb-2">Components</h3>
                    <p class="text-gray-300">Reusable view components for consistent interfaces.</p>
                </div>
                <div class="bg-gray-800 bg-opacity-50 p-6 rounded-lg hover:bg-purple-900 hover:bg-opacity-30 transition-all duration-300">
                    <div class="text-purple-400 text-4xl mb-4">üõ°Ô∏è</div>
                    <h3 class="text-white text-xl font-semibold mb-2">Middleware</h3>
                    <p class="text-gray-300">Request filtering for authentication, validation, and more.</p>
                </div>
                <div class="bg-gray-800 bg-opacity-50 p-6 rounded-lg hover:bg-purple-900 hover:bg-opacity-30 transition-all duration-300">
                    <div class="text-purple-400 text-4xl mb-4">üîå</div>
                    <h3 class="text-white text-xl font-semibold mb-2">API Development</h3>
                    <p class="text-gray-300">Tools for building robust RESTful APIs quickly.</p>
                </div>
            </div>
            
            <!-- Get Started -->
            <div class="bg-gray-800 bg-opacity-50 p-8 rounded-lg mb-8">
                <h2 class="text-white text-2xl font-semibold mb-4">Get Started</h2>
                <div class="bg-gray-900 p-4 rounded-md overflow-x-auto mb-4">
                    <pre class="text-green-400">$ php warvil make:controller UserController</pre>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    <a href="/docs" class="block bg-purple-700 hover:bg-purple-600 text-white text-center py-3 px-4 rounded-md transition-colors">Documentation</a>
                    <a href="https://github.com/wardvisual/warvilphp" target="_blank" class="block bg-gray-700 hover:bg-gray-600 text-white text-center py-3 px-4 rounded-md transition-colors">GitHub</a>
                    <a href="/examples" class="block bg-gray-700 hover:bg-gray-600 text-white text-center py-3 px-4 rounded-md transition-colors">Examples</a>
                </div>
            </div>
            
            <!-- Footer -->
            <div class="text-center text-gray-400">
                <p>WarvilPHP v<?= WARVIL_VERSION ?? '1.0.0' ?> ‚Ä¢ Made with ‚ù§Ô∏è by <a href="https://github.com/wardvisual" class="text-purple-400 hover:text-purple-300">WardVisual</a></p>
                <p class="text-sm mt-2">Under active development. While we strive for stability, use in production is at your own risk.</p>
            </div>
        </div>
    </div>
</div>
EOT;
        file_put_contents('app/views/welcome/index.php', $welcomeView);
        echo "{$green}‚úì{$reset} Created welcome view\n";
    } else {
        echo "{$yellow}!{$reset} Welcome view already exists\n";
    }

    // Create CSS file for the welcome view
    if (!file_exists('app/views/welcome/index.css')) {
        $welcomeCSS = <<<'EOT'
/* Welcome page custom styles */
body {
    margin: 0;
    padding: 0;
    font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}
EOT;
        file_put_contents('app/views/welcome/index.css', $welcomeCSS);
        echo "{$green}‚úì{$reset} Created welcome styles\n";
    } else {
        echo "{$yellow}!{$reset} Welcome styles already exist\n";
    }

    // Update web routes
    if (file_exists('app/routes/web.php')) {
        $routesContent = file_get_contents('app/routes/web.php');
        if (strpos($routesContent, 'WelcomeController') === false) {
            $updatedRoutes = preg_replace('/Router::get\(\'\\/\',.*?;/', "Router::get('/', 'WelcomeController', 'index');", $routesContent);
            file_put_contents('app/routes/web.php', $updatedRoutes);
            echo "{$green}‚úì{$reset} Updated root route to use WelcomeController\n";
        } else {
            echo "{$yellow}!{$reset} Route already points to WelcomeController\n";
        }
    } else {
        // Create web.php routes file if it doesn't exist
        $routesContent = <<<'EOT'
<?php

use app\core\{Router};

Router::get('/', 'WelcomeController', 'index');
EOT;
        
        if (!is_dir('app/routes')) {
            mkdir('app/routes', 0755, true);
        }
        
        file_put_contents('app/routes/web.php', $routesContent);
        echo "{$green}‚úì{$reset} Created web routes file with welcome route\n";
    }

    echo "\n{$green}Welcome page installed successfully!{$reset}\n";
    echo "{$yellow}Run 'php warvil serve' to see your new welcome page.{$reset}\n";
}

// Main installation function
function installFramework()
{
    $green = "\033[0;32m";
    $yellow = "\033[1;33m";
    $purple = "\033[0;35m";
    $reset = "\033[0m";

    echo "{$purple}
‚ï¶ ‚ï¶‚îå‚îÄ‚îê‚î¨‚îÄ‚îê‚î¨  ‚î¨‚î¨‚î¨  ‚ïî‚ïê‚ïó‚ï¶ ‚ï¶‚ïî‚ïê‚ïó
‚ïë‚ïë‚ïë‚îú‚îÄ‚î§‚îú‚î¨‚îò‚îî‚îê‚îå‚îò‚îÇ‚îÇ  ‚ï†‚ïê‚ïù‚ï†‚ïê‚ï£‚ï†‚ïê‚ïù
‚ïö‚ï©‚ïù‚î¥ ‚î¥‚î¥‚îî‚îÄ ‚îî‚îò ‚î¥‚î¥‚îÄ‚îò‚ï©  ‚ï© ‚ï©‚ï©   
    {$reset}\n";

    echo "{$green}Installing WarvilPHP Framework{$reset}\n\n";

    // Create base directories
    $directories = [
        'app/controllers',
        'app/models',
        'app/views',
        'app/shared/layouts',
        'app/shared/components',
        'public/assets',
        'public/uploads'
    ];

    foreach ($directories as $dir) {
        if (!is_dir($dir)) {
            mkdir($dir, 0755, true);
            echo "{$green}‚úì{$reset} Created directory: $dir\n";
        }
    }

    // Generate application key
    if (file_exists('cli/key.php')) {
        require_once 'cli/key.php';
        if (function_exists('generateAppKey')) {
            generateAppKey();
        }
    }

    // Set file permissions
    chmod('warvil', 0755);
    if (file_exists('warvil.bat')) {
        chmod('warvil.bat', 0755);
    }

    // Install welcome page
    installWelcomePage();

    echo "\n{$green}Installation completed!{$reset}\n";
    echo "{$yellow}Run 'php warvil serve' to start the development server.{$reset}\n";
}

// ... existing welcome page installation code ...

// Run the installation
installFramework();